import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { motion } from "framer-motion";

const RecipeSharing = () => {
  const [recipes, setRecipes] = useState([
    {
      name: "Spaghetti Carbonara",
      image: "https://bellyfull.net/wp-content/uploads/2023/02/Spaghetti-Carbonara-blog-1.jpg"
    },
    {
      name: "Grilled Chicken Salad",
      image: "https://ifoodreal.com/wp-content/uploads/2021/06/fg-grilled-chicken-salad.jpg"
    },
    {
      name: "Chocolate Cake",
      image: "https://www.allrecipes.com/thmb/GSco4zzXiyTi96oJEZiq-Lacf18=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/278981-grandmas-chocolate-texas-sheetcake-3x4-378-copy-1a1b1096c4e544f394a2bc7bb2896379.jpg"
    },
    {
      name: "Paneer Butter Masala",
      image: "https://www.cubesnjuliennes.com/wp-content/uploads/2019/11/Paneer-Butter-Masala-Recipe-1.jpg"
    },
    {
      name: "Biryani",
      image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQNO97FbHTCFtvxLuqzsHpJaUQyTFJjKNWyDw&s" // Replace with actual biryani image when available
    },
    {
      name: "Butter Chicken",
      image: "https://www.cubesnjuliennes.com/wp-content/uploads/2019/11/Paneer-Butter-Masala-Recipe-1.jpg"
    }
  ]);
  const [newRecipe, setNewRecipe] = useState("");

  const addRecipe = () => {
    if (newRecipe.trim() !== "") {
      const newRecipeData = {
        name: newRecipe,
        image: "https://via.placeholder.com/400x300" // Default fallback image
      };
      setRecipes([...recipes, newRecipeData]);
      setNewRecipe("");
    }
  };

  return (
    <div className="p-8 max-w-6xl mx-auto bg-gray-100 rounded-lg shadow-lg">
      
      <h1 className="text-4xl font-bold mb-6 text-center text-gray-800">Recipe Sharing Platform</h1>
      <div className="flex gap-4 mb-6">
        <Input 
          placeholder="Enter recipe name" 
          value={newRecipe} 
          onChange={(e) => setNewRecipe(e.target.value)} 
          className="flex-1 p-3 border rounded-lg"
        />
        <Button onClick={addRecipe} className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700">Add Recipe</Button>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {recipes.map((recipe, index) => (
          <motion.div key={index} whileHover={{ scale: 1.05 }}>
            <Card className="shadow-lg rounded-lg overflow-hidden bg-white transform transition duration-300 hover:scale-105">
              <CardContent className="p-6 flex flex-col items-center">
                <img 
                  src={recipe.image} 
                  alt={recipe.name} 
                  className="w-full h-48 object-cover rounded-lg mb-4" 
                  onError={(e) => e.target.src = "https://via.placeholder.com/400x300"} />
                <h2 className="text-xl font-semibold text-gray-700">{recipe.name}</h2>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>
    </div>
  );
};

export default RecipeSharing;